{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ZahidAliDev\\\\Desktop\\\\Producto1\\\\app\\\\views\\\\Retos.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { db } from \"../config/db.js\";\nvar styles = StyleSheet.create({\n  boton: {\n    left: '10%',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  textoBoton: {\n    color: '#ffffff',\n    fontSize: 14\n  },\n  boton2: {\n    left: '90%',\n    height: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textoBoton2: {\n    color: '#ffffff',\n    fontSize: 14\n  },\n  fila: {\n    height: '25%',\n    bottom: '90%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderColor: '#ffffff',\n    borderBottomWidth: 1,\n    backgroundColor: '#1590F2',\n    justifyContent: 'center'\n  }\n});\nvar sitios = [];\nexport var Retos = function (_React$Component) {\n  _inherits(Retos, _React$Component);\n\n  var _super = _createSuper(Retos);\n\n  function Retos() {\n    var _this;\n\n    _classCallCheck(this, Retos);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      sitios: [],\n      loading: true\n    };\n\n    _this.renderItem = function (data) {\n      return React.createElement(View, {\n        style: styles.fila,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 5\n        }\n      }, React.createElement(TouchableOpacity, {\n        styles: styles.boton,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.textoBoton2,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, \" \", data.item.value.nombre, \"  \")));\n    };\n\n    return _this;\n  }\n\n  _createClass(Retos, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      db.collection(\"sitios\").get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          sitios.push({\n            \"key\": doc.id,\n            \"value\": doc.data()\n          });\n        });\n\n        _this2.setState({\n          sitios: sitios,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.loading) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }\n        }, \"Cargando \"));\n      } else {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }\n        }, React.createElement(FlatList, {\n          style: {\n            flex: 1\n          },\n          data: this.state.sitios,\n          renderItem: function renderItem(item) {\n            return _this3.renderItem(item);\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return item.key;\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, \"El reto ira aqui \"));\n    }\n  }]);\n\n  return Retos;\n}(React.Component);","map":{"version":3,"sources":["C:/Users/ZahidAliDev/Desktop/Producto1/app/views/Retos.js"],"names":["React","db","styles","StyleSheet","create","boton","left","justifyContent","alignItems","textoBoton","color","fontSize","boton2","height","textoBoton2","fila","bottom","flexDirection","borderColor","borderBottomWidth","backgroundColor","sitios","Retos","state","loading","renderItem","data","item","value","nombre","collection","get","then","querySnapshot","forEach","doc","push","id","setState","flex","index","key","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, Image, Alert, TouchableOpacity, Text, Button, FlatList } from 'react-native';\r\nimport { db } from '../config/db.js';\r\n\r\nconst styles = StyleSheet.create({\r\n  boton: {\r\n    left: '10%',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n\r\n  },\r\n\r\n  textoBoton: {\r\n\r\n    color: '#ffffff',\r\n    fontSize: 14,\r\n\r\n  },\r\n  boton2: {\r\n    left: '90%',\r\n    height: '50%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  textoBoton2: {\r\n\r\n    color: '#ffffff',\r\n    fontSize: 14,\r\n\r\n  },\r\n  fila: {\r\n    height: '25%',\r\n    bottom: '90%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    borderColor: '#ffffff',\r\n    borderBottomWidth: 1,\r\n    backgroundColor: '#1590F2',\r\n    justifyContent: 'center'\r\n  }\r\n\r\n})\r\nlet sitios = [];\r\n\r\nexport class Retos extends React.Component {\r\n  componentDidMount() {\r\n    db.collection(\"sitios\").get().then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        sitios.push({ \"key\": doc.id, \"value\": doc.data() });\r\n      });\r\n      this.setState({ sitios: sitios, loading: false });\r\n    });\r\n  }\r\n\r\n\r\n  state = {\r\n    sitios: [],\r\n    loading: true\r\n  }\r\n\r\n  renderItem = data =>\r\n    <View style={styles.fila}>\r\n      <TouchableOpacity styles={styles.boton}>\r\n        <Text style={styles.textoBoton2}> {data.item.value.nombre}  </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n\r\n  render() {\r\n\r\n    if (this.state.loading) {\r\n      return (\r\n        <View>\r\n          <Text>Cargando </Text>\r\n        </View>\r\n      )\r\n    } else {\r\n      return (\r\n        <View>\r\n          <FlatList\r\n            style={{\r\n              flex: 1,\r\n            }}\r\n            data={this.state.sitios}\r\n            renderItem={item => this.renderItem(item)}\r\n            keyExtractor={(item, index) => item.key}\r\n          />\r\n        </View>\r\n      )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n      <View>\r\n        <Text>El reto ira aqui </Text>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}